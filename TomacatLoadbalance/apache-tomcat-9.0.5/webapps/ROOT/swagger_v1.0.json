{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Employee info",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8888",
  "basePath": "/",
  "tags": [
    {
      "name": "employee",
      "description": "Operations about employee",
      "externalDocs": {
        "description": "Find out more about our employee",
        "url": "http://sekhar.io"
      }
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/createemployees": {
      "post": {
        "tags": [
          "employee"
        ],
        "summary": "Create employee",
        "description": "This can only employeer.",
        "operationId": "createemployees",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created employee object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeModel"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Employee Created"
          }
        }
      }
    },
    "/getemployee/{id}": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Get employee by id",
        "description": "",
        "operationId": "getemployee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmployeeModel"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "employee not found"
          }
        }
      }
    },
    "/getallemployees": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Get all employees",
        "description": "",
        "operationId": "getallemployees",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmployeeModel"
            }
          },
          "404": {
            "description": "employees not found"
          }
        }
      }
    },
    "/update/{id}": {
      "put": {
        "tags": [
          "employee"
        ],
        "summary": "update employee by id",
        "description": "",
        "operationId": "updateById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be update.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "update employee object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmployeeModel"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "employee not found"
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "tags": [
          "employee"
        ],
        "summary": "delete employee by id",
        "description": "",
        "operationId": "deleteEmployeeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be delete.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "employee not found"
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeeModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      },
      "xml": {
        "name": "EmployeeModel"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}